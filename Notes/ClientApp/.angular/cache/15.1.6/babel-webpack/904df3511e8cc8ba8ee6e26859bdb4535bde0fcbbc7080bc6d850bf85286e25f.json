{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\n//https://upmostly.com/angular/async-validators-in-angular\nexport class CustomValidators {\n  static uniqueEmailValidator(authService) {\n    return control => {\n      console.log('good');\n      return authService.getUser(control.value).pipe(map(unique => {\n        return unique ? {\n          \"uniqueEmail\": true\n        } : null;\n      }));\n    };\n  }\n}\nCustomValidators.ɵfac = function CustomValidators_Factory(t) {\n  return new (t || CustomValidators)();\n};\nCustomValidators.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomValidators,\n  factory: CustomValidators.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,GAAG,QAAQ,MAAM;;AAGtC;AAEA,OAAM,MAAOC,gBAAgB;EAEzB,OAAOC,oBAAoB,CAACC,WAAuB;IAC/C,OAAQC,OAAwB,IAA2E;MACvGC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnB,OAAOH,WAAW,CAACI,OAAO,CAACH,OAAO,CAACI,KAAK,CAAC,CAACC,IAAI,CAACT,GAAG,CAACU,MAAM,IAAE;QACvD,OAAOA,MAAM,GAAC;UAAE,aAAa,EAAC;QAAI,CAAE,GAAC,IAAI;MAC7C,CAAC,CAAC,CAAC;IACP,CAAC;EACL;;AATST,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAU,SAAhBV,gBAAgB;EAAAW,YADL;AAAM","names":["map","CustomValidators","uniqueEmailValidator","authService","control","console","log","getUser","value","pipe","unique","factory","providedIn"],"sourceRoot":"","sources":["D:\\mine\\projects\\dotnet-angular\\Notes\\Notes\\ClientApp\\src\\app\\directives\\custom-validator.directive.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors, AsyncValidatorFn } from '@angular/forms';\r\nimport { Directive, Injectable } from \"@angular/core\";\r\nimport { Observable, map } from 'rxjs';\r\nimport { AuthService } from '../components/auth/auth.service';\r\n\r\n//https://upmostly.com/angular/async-validators-in-angular\r\n@Injectable({providedIn:'root'})\r\nexport class CustomValidators{\r\n    \r\n    static uniqueEmailValidator(authService:AuthService):AsyncValidatorFn{\r\n        return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null>=>{\r\n            console.log('good')\r\n            return authService.getUser(control.value).pipe(map(unique=>{\r\n                return unique?{ \"uniqueEmail\":true }:null;\r\n            }))\r\n        }\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}