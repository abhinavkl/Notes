{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction RegisterComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"Email invalid.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.passwordValidator = /^\\S*(?=\\S{8,})(?=\\S*\\d)(?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*[!@#$%^&*? ])\\S*$/;\n    this.registerForm = this.fb.group({\n      email: ['', {\n        validators: [Validators.email, Validators.required],\n        updateOn: 'change'\n      }],\n      password: ['', {\n        validators: [Validators.required, Validators.pattern(this.passwordValidator)],\n        updateOn: 'change'\n      }],\n      confirmpassword: ['', {\n        validators: [Validators.required, Validators.pattern(this.passwordValidator)],\n        updateOn: 'change'\n      }]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    console.log(this.registerForm);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 37,\n  vars: 3,\n  consts: [[3, \"formGroup\", \"submit\"], [1, \"row\"], [1, \"col-2\"], [1, \"col-8\"], [1, \"container\"], [1, \"row\", \"align-items-center\", \"m-2\"], [1, \"col-3\"], [\"for\", \"email\"], [1, \"col-6\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"class\", \"text-danger\", \"field-validation-for\", \"email\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"name\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"field-validation-for\", \"password\"], [\"for\", \"confirmpassword\"], [\"type\", \"password\", \"name\", \"confirmpassword\", \"id\", \"confirmpassword\", \"formControlName\", \"confirmpassword\", 1, \"form-control\"], [\"field-validation-for\", \"confirmpassword\"], [1, \"col\"], [1, \"col\", 2, \"text-align-last\", \"center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"m-2\", 3, \"disabled\"], [\"type\", \"reset\", 1, \"btn\", \"btn-secondary\", \"m-2\"], [\"field-validation-for\", \"email\", 1, \"text-danger\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"label\", 7);\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 8);\n      i0.ɵɵelement(10, \"input\", 9);\n      i0.ɵɵtemplate(11, RegisterComponent_span_11_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"div\", 6)(14, \"label\", 11);\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 8);\n      i0.ɵɵelement(17, \"input\", 12)(18, \"span\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 5)(20, \"div\", 6)(21, \"label\", 14);\n      i0.ɵɵtext(22, \"Confirm Password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 8);\n      i0.ɵɵelement(24, \"input\", 15)(25, \"span\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 5)(27, \"div\", 17)(28, \"div\", 4)(29, \"div\", 1)(30, \"div\", 18)(31, \"div\")(32, \"button\", 19);\n      i0.ɵɵtext(33, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 20);\n      i0.ɵɵtext(35, \"Reset\");\n      i0.ɵɵelementEnd()()()()()()()()();\n      i0.ɵɵelement(36, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.registerForm.get(\"email\").touched && !ctx.registerForm.get(\"email\").valid);\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAgCA,UAAU,QAAQ,gBAAgB;;;;;;ICY1CC,gCAGK;IAAAA,8BAAc;IAAAA,iBAAO;;;ADTlD,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,EAAc;IAAd,OAAE,GAAFA,EAAE;IAFtB,sBAAiB,GAAQ,wEAAwE;IAG/F,IAAI,CAACC,YAAY,GAAC,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAC9BC,KAAK,EAAC,CAAC,EAAE,EAAC;QACRC,UAAU,EAAC,CAACR,UAAU,CAACO,KAAK,EAACP,UAAU,CAACS,QAAQ,CAAC;QACjDC,QAAQ,EAAC;OACV,CAAC;MACFC,QAAQ,EAAC,CAAC,EAAE,EAAC;QACXH,UAAU,EAAC,CAACR,UAAU,CAACS,QAAQ,EAACT,UAAU,CAACY,OAAO,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAAC;QAC3EH,QAAQ,EAAC;OACV,CAAC;MACFI,eAAe,EAAC,CAAC,EAAE,EAAC;QAClBN,UAAU,EAAC,CAACR,UAAU,CAACS,QAAQ,EAACT,UAAU,CAACY,OAAO,CAAC,IAAI,CAACC,iBAAiB,CAAC,CAAC;QAC3EH,QAAQ,EAAC;OACV;KACF,CAAC;EACJ;EAEAK,QAAQ,IACR;EAEAC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,YAAY,CAAC;EAChC;;AA1BWH,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCP9BtB,+BAAuD;MAAtBA;QAAA,OAAUuB,cAAU;MAAA,EAAC;MAClDvB,8BAAiB;MACbA,yBAAyB;MACzBA,8BAAmB;MAIgBA,qBAAK;MAAAA,iBAAQ;MAEpCA,8BAAmB;MACfA,4BAEC;MACDA,uEAG0B;MAC9BA,iBAAM;MAEVA,+BAAwC;MAEVA,yBAAQ;MAAAA,iBAAQ;MAE1CA,+BAAmB;MACfA,6BAEC;MAELA,iBAAM;MAEVA,+BAAwC;MAEHA,iCAAgB;MAAAA,iBAAQ;MAEzDA,+BAAmB;MACfA,6BAEC;MAELA,iBAAM;MAEVA,+BAAwC;MAQyBA,yBAAQ;MAAAA,iBAAS;MAC1DA,mCAAmD;MAAAA,sBAAK;MAAAA,iBAAS;MASjGA,0BAAyB;MAC7BA,iBAAM;;;MA5DJA,4CAA0B;MAeHA,gBAA+E;MAA/EA,oGAA+E;MAkC5DA,gBAAgC;MAAhCA,kDAAgC","names":["Validators","i0","RegisterComponent","constructor","fb","registerForm","group","email","validators","required","updateOn","password","pattern","passwordValidator","confirmpassword","ngOnInit","onSubmit","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\mine\\projects\\dotnet-angular\\Notes\\Notes\\ClientApp\\src\\app\\components\\auth\\register\\register.component.ts","D:\\mine\\projects\\dotnet-angular\\Notes\\Notes\\ClientApp\\src\\app\\components\\auth\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup,Validators } from '@angular/forms';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit{\n  registerForm:FormGroup;\n  passwordValidator:RegExp=/^\\S*(?=\\S{8,})(?=\\S*\\d)(?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*[!@#$%^&*? ])\\S*$/;\n  \n  constructor(private fb:FormBuilder){\n    this.registerForm=this.fb.group({\n      email:['',{\n        validators:[Validators.email,Validators.required],\n        updateOn:'change'\n      }],\n      password:['',{\n        validators:[Validators.required,Validators.pattern(this.passwordValidator)],\n        updateOn:'change'\n      }],\n      confirmpassword:['',{\n        validators:[Validators.required,Validators.pattern(this.passwordValidator)],\n        updateOn:'change'\n      }]\n    })\n  }\n  \n  ngOnInit(): void {    \n  }\n\n  onSubmit(){\n    console.log(this.registerForm)\n  }\n}\n","<form [formGroup]=\"registerForm\" (submit)=\"onSubmit()\">\n    <div class=\"row\">\n        <div class=\"col-2\"></div>\n        <div class=\"col-8\">\n            <div class=\"container\">\n                <div class=\"row align-items-center m-2\">\n                    <div class=\"col-3\">\n                        <label for=\"email\">Email</label>\n                    </div>\n                    <div class=\"col-6\">\n                        <input type=\"text\" name=\"email\" id=\"email\" class=\"form-control\"\n                            formControlName=\"email\"\n                        >\n                        <span class=\"text-danger\" \n                            field-validation-for=\"email\"\n                            *ngIf=\" registerForm.get('email')!.touched && !registerForm.get('email')!.valid\"\n                            >Email invalid.</span>\n                    </div>\n                </div>\n                <div class=\"row align-items-center m-2\">\n                    <div class=\"col-3\">\n                        <label for=\"password\">Password</label>\n                    </div>\n                    <div class=\"col-6\">\n                        <input type=\"password\" name=\"password\" id=\"password\" class=\"form-control\"\n                            formControlName=\"password\"\n                        >\n                        <span field-validation-for=\"password\"></span>\n                    </div>\n                </div>\n                <div class=\"row align-items-center m-2\">\n                    <div class=\"col-3\">\n                        <label for=\"confirmpassword\">Confirm Password</label>\n                    </div>\n                    <div class=\"col-6\">\n                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" class=\"form-control\"\n                            formControlName=\"confirmpassword\"\n                        >\n                        <span field-validation-for=\"confirmpassword\"></span>\n                    </div>\n                </div>\n                <div class=\"row align-items-center m-2\">\n                    <div class=\"col\">\n                        <div class=\"container\">\n                            <div class=\"row\">\n                                <div class=\"col\" style=\"text-align-last: center;\">\n                                    <div>                                    \n                                        <button class=\"btn btn-primary m-2\" \n                                                type=\"submit\"\n                                                [disabled]=\"!registerForm.valid\">Register</button>  \n                                        <button class=\"btn btn-secondary m-2\" type=\"reset\">Reset</button>                \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>        \n        </div>\n        <div class=\"col-2\"></div>\n    </div>    \n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}